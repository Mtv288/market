"""Initial tables

Revision ID: efa7457a62aa
Revises: 566b43f75618
Create Date: 2025-05-30 08:24:03.215841

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'efa7457a62aa'
down_revision: Union[str, None] = '566b43f75618'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('brands',
    sa.Column('id', sa.Integer(), nullable=False, comment='Уникальный ID бренда'),
    sa.Column('name', sa.String(), nullable=False, comment='Название бренда'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False, comment='Уникальный ID категории'),
    sa.Column('name', sa.String(), nullable=False, comment='Название категории'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False, comment='Уникальный ID пользователя'),
    sa.Column('email', sa.String(), nullable=False, comment='Электронная почта'),
    sa.Column('password_hash', sa.String(), nullable=False, comment='Хэш пароля'),
    sa.Column('name', sa.String(), nullable=False, comment='Имя пользователя'),
    sa.Column('is_seller', sa.Boolean(), nullable=False, comment='Признак продавца'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('orders',
    sa.Column('id', sa.Integer(), nullable=False, comment='Уникальный ID заказа'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='ID покупателя'),
    sa.Column('created_at', sa.DateTime(), nullable=False, comment='Дата создания заказа'),
    sa.Column('total_amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Общая сумма заказа'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cart_items',
    sa.Column('id', sa.Integer(), nullable=False, comment='Уникальный ID позиции в корзине'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='ID пользователя'),
    sa.Column('goods_id', sa.Integer(), nullable=False, comment='ID добавленного товара'),
    sa.Column('quantity', sa.Integer(), nullable=False, comment='Количество товара в корзине'),
    sa.ForeignKeyConstraint(['goods_id'], ['goods.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_items',
    sa.Column('id', sa.Integer(), nullable=False, comment='Уникальный ID позиции'),
    sa.Column('order_id', sa.Integer(), nullable=False, comment='ID заказа'),
    sa.Column('goods_id', sa.Integer(), nullable=False, comment='ID товара'),
    sa.Column('quantity', sa.Integer(), nullable=False, comment='Количество'),
    sa.Column('price_at_purchase', sa.Numeric(precision=10, scale=2), nullable=False, comment='Цена на момент покупки'),
    sa.ForeignKeyConstraint(['goods_id'], ['goods.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False, comment='Уникальный ID оплаты'),
    sa.Column('order_id', sa.Integer(), nullable=False, comment='ID заказа'),
    sa.Column('payment_date', sa.DateTime(), nullable=False, comment='Дата оплаты'),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='Сумма оплаты'),
    sa.Column('payment_method', sa.String(), nullable=False, comment='Метод оплаты (карта, PayPal и т.п.)'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reviews',
    sa.Column('id', sa.Integer(), nullable=False, comment='Уникальный ID отзыва'),
    sa.Column('user_id', sa.Integer(), nullable=False, comment='ID автора'),
    sa.Column('goods_id', sa.Integer(), nullable=False, comment='ID товара'),
    sa.Column('rating', sa.Integer(), nullable=False, comment='Оценка (1–5)'),
    sa.Column('comment', sa.String(), nullable=True, comment='Комментарий'),
    sa.ForeignKeyConstraint(['goods_id'], ['goods.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('goods', sa.Column('certificate', sa.String(), nullable=True, comment='Сертификат товара (если есть)'))
    op.add_column('goods', sa.Column('seller_id', sa.Integer(), nullable=False, comment='ID продавца'))
    op.add_column('goods', sa.Column('category_id', sa.Integer(), nullable=False, comment='ID категории'))
    op.add_column('goods', sa.Column('brand_id', sa.Integer(), nullable=True, comment='ID бренда'))
    op.alter_column('goods', 'id',
               existing_type=sa.INTEGER(),
               comment='Уникальный ID товара',
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('goods', 'name',
               existing_type=sa.VARCHAR(),
               comment='Название товара',
               existing_nullable=False)
    op.alter_column('goods', 'description',
               existing_type=sa.VARCHAR(),
               comment='Описание товара',
               existing_nullable=False)
    op.alter_column('goods', 'price',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               comment='Цена товара',
               existing_nullable=False)
    op.alter_column('goods', 'quantity',
               existing_type=sa.INTEGER(),
               comment='Доступное количество',
               existing_nullable=False)
    op.create_foreign_key(None, 'goods', 'users', ['seller_id'], ['id'])
    op.create_foreign_key(None, 'goods', 'brands', ['brand_id'], ['id'])
    op.create_foreign_key(None, 'goods', 'categories', ['category_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'goods', type_='foreignkey')
    op.drop_constraint(None, 'goods', type_='foreignkey')
    op.drop_constraint(None, 'goods', type_='foreignkey')
    op.alter_column('goods', 'quantity',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Доступное количество',
               existing_nullable=False)
    op.alter_column('goods', 'price',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               comment=None,
               existing_comment='Цена товара',
               existing_nullable=False)
    op.alter_column('goods', 'description',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Описание товара',
               existing_nullable=False)
    op.alter_column('goods', 'name',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Название товара',
               existing_nullable=False)
    op.alter_column('goods', 'id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Уникальный ID товара',
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('goods', 'brand_id')
    op.drop_column('goods', 'category_id')
    op.drop_column('goods', 'seller_id')
    op.drop_column('goods', 'certificate')
    op.drop_table('reviews')
    op.drop_table('payments')
    op.drop_table('order_items')
    op.drop_table('cart_items')
    op.drop_table('orders')
    op.drop_table('users')
    op.drop_table('categories')
    op.drop_table('brands')
    # ### end Alembic commands ###
